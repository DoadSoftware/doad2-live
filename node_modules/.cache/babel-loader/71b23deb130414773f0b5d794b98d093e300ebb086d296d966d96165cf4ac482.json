{"ast":null,"code":"var _jsxFileName = \"C:\\\\DOAD\\\\SportsApplication\\\\doad2-live\\\\src\\\\components\\\\CricketPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CricketPage = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalImageSrc, setModalImageSrc] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const images = [\"/images/Cricket1.jpg\", \"/images/Cricket2.jpg\", \"/images/Cricket3.jpg\", \"/images/Cricket4.jpg\", \"/images/Cricket5.jpg\", \"/images/Cricket6.jpg\", \"/images/Cricket7.jpg\", \"/images/Cricket8.jpg\", \"/images/Cricket9.jpg\", \"/images/Cricket10.jpg\"];\n  const openModal = index => {\n    setModalImageSrc(images[index]);\n    setCurrentIndex(index);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => setIsModalOpen(false);\n  const changeImage = direction => {\n    const newIndex = (currentIndex + direction + images.length) % images.length;\n    setModalImageSrc(images[newIndex]);\n    setCurrentIndex(newIndex);\n  };\n  const getAdjacentImages = () => {\n    const prevIndex = (currentIndex - 1 + images.length) % images.length;\n    const nextIndex = (currentIndex + 1) % images.length;\n    return [images[prevIndex], images[nextIndex]];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'black',\n      color: 'white',\n      minHeight: '100vh',\n      padding: '20px',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [images.map((src, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        boxSizing: 'border-box',\n        padding: '20px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: '2.5rem'\n        },\n        children: \"Cricket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '1.25rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: src,\n          alt: `Image ${index + 1}`,\n          width: \"500px\",\n          height: \"auto\",\n          style: {\n            float: index % 2 === 0 ? 'right' : 'left',\n            border: '2px dotted black',\n            margin: '0 25px 15px 0',\n            cursor: 'pointer'\n          },\n          onClick: () => openModal(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), \"In the paragraph below, the image will float to the \", index % 2 === 0 ? 'right' : 'left', \". A dotted black border is added to the image. We have also added margins to the image to push the text away from the image.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 1000,\n        overflow: 'auto'\n      },\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          display: 'flex',\n          alignItems: 'center',\n          maxWidth: '90%',\n          maxHeight: '80%',\n          overflow: 'hidden'\n        },\n        children: [getAdjacentImages().map((src, idx) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: src,\n          alt: `Adjacent Image ${idx + 1}`,\n          style: {\n            width: '20%',\n            height: 'auto',\n            cursor: 'pointer',\n            margin: '0 5px'\n          },\n          onClick: e => {\n            e.stopPropagation();\n            openModal(images.indexOf(src));\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: modalImageSrc,\n          alt: \"Popup\",\n          style: {\n            width: '60%',\n            height: 'auto',\n            cursor: 'pointer'\n          },\n          onClick: e => e.stopPropagation()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeImage(-1),\n          style: {\n            position: 'absolute',\n            top: '50%',\n            left: '10px',\n            transform: 'translateY(-50%)',\n            backgroundColor: 'rgba(255, 255, 255, 0.7)',\n            border: 'none',\n            padding: '10px',\n            cursor: 'pointer'\n          },\n          children: \"\\u25C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeImage(1),\n          style: {\n            position: 'absolute',\n            top: '50%',\n            right: '10px',\n            transform: 'translateY(-50%)',\n            backgroundColor: 'rgba(255, 255, 255, 0.7)',\n            border: 'none',\n            padding: '10px',\n            cursor: 'pointer'\n          },\n          children: \"\\u25B6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(CricketPage, \"psSrn4RMguyacXb2fLqkvNjclZ0=\");\n_c = CricketPage;\nexport default CricketPage;\nvar _c;\n$RefreshReg$(_c, \"CricketPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CricketPage","_s","isModalOpen","setIsModalOpen","modalImageSrc","setModalImageSrc","currentIndex","setCurrentIndex","images","openModal","index","closeModal","changeImage","direction","newIndex","length","getAdjacentImages","prevIndex","nextIndex","style","backgroundColor","color","minHeight","padding","display","flexDirection","children","map","src","width","boxSizing","marginBottom","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","alt","height","float","border","margin","cursor","onClick","position","top","left","justifyContent","alignItems","zIndex","overflow","maxWidth","maxHeight","idx","e","stopPropagation","indexOf","transform","right","_c","$RefreshReg$"],"sources":["C:/DOAD/SportsApplication/doad2-live/src/components/CricketPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst CricketPage = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalImageSrc, setModalImageSrc] = useState('');\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  const images = [\r\n    \"/images/Cricket1.jpg\",\r\n    \"/images/Cricket2.jpg\",\r\n    \"/images/Cricket3.jpg\",\r\n    \"/images/Cricket4.jpg\",\r\n    \"/images/Cricket5.jpg\",\r\n    \"/images/Cricket6.jpg\",\r\n    \"/images/Cricket7.jpg\",\r\n    \"/images/Cricket8.jpg\",\r\n    \"/images/Cricket9.jpg\",\r\n    \"/images/Cricket10.jpg\"\r\n  ];\r\n\r\n  const openModal = (index) => {\r\n    setModalImageSrc(images[index]);\r\n    setCurrentIndex(index);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => setIsModalOpen(false);\r\n\r\n  const changeImage = (direction) => {\r\n    const newIndex = (currentIndex + direction + images.length) % images.length;\r\n    setModalImageSrc(images[newIndex]);\r\n    setCurrentIndex(newIndex);\r\n  };\r\n\r\n  const getAdjacentImages = () => {\r\n    const prevIndex = (currentIndex - 1 + images.length) % images.length;\r\n    const nextIndex = (currentIndex + 1) % images.length;\r\n    return [images[prevIndex], images[nextIndex]];\r\n  };\r\n\r\n  return (\r\n    <div style={{ \r\n      backgroundColor: 'black', \r\n      color: 'white', \r\n      minHeight: '100vh', \r\n      padding: '20px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    }}>\r\n      {images.map((src, index) => (\r\n        <div key={index} style={{ \r\n          width: '100%', \r\n          boxSizing: 'border-box',\r\n          padding: '20px',\r\n          marginBottom: '20px',\r\n        }}>\r\n          <h1 style={{ fontSize: '2.5rem' }}>Cricket</h1>\r\n          <p style={{ fontSize: '1.25rem' }}>\r\n            <img \r\n              src={src} \r\n              alt={`Image ${index + 1}`} \r\n              width=\"500px\" \r\n              height=\"auto\" \r\n              style={{ \r\n                float: index % 2 === 0 ? 'right' : 'left', \r\n                border: '2px dotted black', \r\n                margin: '0 25px 15px 0', \r\n                cursor: 'pointer'\r\n              }} \r\n              onClick={() => openModal(index)}\r\n            />\r\n            In the paragraph below, the image will float to the {index % 2 === 0 ? 'right' : 'left'}. A dotted black border is added to the image. \r\n            We have also added margins to the image to push the text away from the image.\r\n          </p>\r\n        </div>\r\n      ))}\r\n\r\n      {isModalOpen && (\r\n        <div \r\n          style={{ \r\n            position: 'fixed', \r\n            top: 0, \r\n            left: 0, \r\n            width: '100%', \r\n            height: '100%', \r\n            backgroundColor: 'rgba(0, 0, 0, 0.8)', \r\n            display: 'flex', \r\n            justifyContent: 'center', \r\n            alignItems: 'center',\r\n            zIndex: 1000,\r\n            overflow: 'auto',\r\n          }} \r\n          onClick={closeModal}\r\n        >\r\n          <div style={{ \r\n            position: 'relative',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            maxWidth: '90%',\r\n            maxHeight: '80%',\r\n            overflow: 'hidden',\r\n          }}>\r\n            {getAdjacentImages().map((src, idx) => (\r\n              <img \r\n                key={idx}\r\n                src={src} \r\n                alt={`Adjacent Image ${idx + 1}`} \r\n                style={{ \r\n                  width: '20%', \r\n                  height: 'auto', \r\n                  cursor: 'pointer',\r\n                  margin: '0 5px',\r\n                }} \r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  openModal(images.indexOf(src));\r\n                }}\r\n              />\r\n            ))}\r\n            <img \r\n              src={modalImageSrc} \r\n              alt=\"Popup\" \r\n              style={{ \r\n                width: '60%', \r\n                height: 'auto',\r\n                cursor: 'pointer'\r\n              }} \r\n              onClick={(e) => e.stopPropagation()}\r\n            />\r\n            <button \r\n              onClick={() => changeImage(-1)} \r\n              style={{ \r\n                position: 'absolute', \r\n                top: '50%', \r\n                left: '10px', \r\n                transform: 'translateY(-50%)', \r\n                backgroundColor: 'rgba(255, 255, 255, 0.7)', \r\n                border: 'none', \r\n                padding: '10px', \r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              &#9664;\r\n            </button>\r\n            <button \r\n              onClick={() => changeImage(1)} \r\n              style={{ \r\n                position: 'absolute', \r\n                top: '50%', \r\n                right: '10px', \r\n                transform: 'translateY(-50%)', \r\n                backgroundColor: 'rgba(255, 255, 255, 0.7)', \r\n                border: 'none', \r\n                padding: '10px', \r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              &#9654;\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CricketPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}